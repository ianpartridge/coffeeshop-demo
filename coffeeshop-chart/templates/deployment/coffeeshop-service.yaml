apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coffeeshopService.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "coffeeshopChart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.coffeeshopService.replicaCount }}
  replicas: 1
  selector:
    matchLabels:
      app: coffeeshop-service
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: coffeeshop-service
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: coffeeshop-service
        image: "{{ .Values.coffeeshopService.image.repository }}:{{ .Values.coffeeshopService.image.version }}"
        ports:
          - containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
          periodSeconds: 10
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        imagePullPolicy: {{ .Values.coffeeshopService.image.pullPolicy }}
        env:
          - name: KAFKA_HOST
            value: "{{ .Values.kafka.bootstrap.service }}.{{ .Values.kafka.namespace }}:{{ .Values.kafka.bootstrap.port }}"
          - name: BARISTA_HOST
            value: "{{ include "baristaHttp.fullname" . }}:8082"
        command: ["/bin/sh"]
        args: ["-c", "/opt/ol/wlp/bin/server run defaultServer -Dmp.messaging.connector.liberty-kafka.bootstrap.servers=$(KAFKA_HOST)"]