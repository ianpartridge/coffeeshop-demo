services:
  - docker

os: linux

install:
  - mkdir -p ~/bin && export PATH=~/bin:$PATH
    # Install kind
  - curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/v0.6.0/kind-$(uname)-amd64 && chmod +x ./kind && mv ./kind ~/bin
    # Install kubectl
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl && chmod +x ./kubectl && mv ./kubectl ~/bin
    # Install helm
  - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

script:
    # Build docker images for the services
  - ./build.sh
    # Start a local K8s cluster using kind, configured with a local Docker registry
  - ./.ci/local-cluster.sh
    # Push images to local registry
  - ./.ci/local-registry.sh
    # Update deployments to reference the local registry
  - ./.ci/replace-refs.sh
    # Install kafka via Strimzi (prereq for our helm chart, but CRDs must be installed first)
  - ./start-strimzi.sh
    # Deploy to local cluster via helm
  - helm install coffee-v1 ./coffeeshop-chart -n coffee --wait --timeout 300s
    # Display overall system state for kafka and coffee namespaces
  - kubectl get all -n kafka
  - kubectl get all -n coffee
    # Test system
  - export NODE_PORT=$(kubectl get -o jsonpath="{.spec.ports[0].nodePort}" services coffee-v1-coffeeshop-service --namespace coffee)
  - ./ci-test.sh $NODE_PORT
